---
title: "PROYECCIONES_POBLACIONALES"
author: "CFP"
format: html
editor: visual
---

```{r}
## Entorno de trabajo
gc()
setwd("~/Desktop/U_CHILE/MG_BIOESTADÍSTICA/TESIS/DATOS PÚBLICOS/PROYECCIONES_POBLACIONALES")
```

```{r message=F}
## librerias a usar
library(readxl)
library(tidyverse)
library(kableExtra)
```

# 1. Proyecciones poblacionales

```{r}
## Carga de datos

PROYECCIONES<- read_excel("[PAIS]estimaciones-y-proyecciones-2002-2035-comunas.xlsx")


## Creacion variable quinquenio (Trabajar con la variable edad y función cut)

PROYECCIONES <- PROYECCIONES %>%

## categorización de variable edad  
  mutate(quinquenio = 
           cut(Edad,
      
## número de cortes (breaks) que se hará (los breaks son siempre labels+1)
      breaks = c(0,4,9,14,19,24,29,34,39,44,49,54,59,64,69,74,79, 100),
## etiquetas de los cortes que se realizarán
      labels = c(
        "0-4",      #(0-4]
        "5-9",      #(5-9]
        "10-14",    #(10-14]
        "15-19",    #(15-19] 
        "20-24",   #(20-24]
        "25-29",    #(25-29]
        "30-34",    #(30-34]
        "35-39",    #(35-39]
        "40-44",    #(40-44]
        "45-49",    #(45-49]
        "50-54",    #(50-54]
        "55-59",    #(55-59]
        "60-64",    #(60- 64]
        "65-69",    #(65-69]
        "70-74",    #(70- 74]
        "75-79",    #(75-79]
        "80 y más"  #(80 y mas(
      ),
## En el intervalo más pequeño (0-4), incluir el límite inferior
   include.lowest = TRUE
  )
)

#levels(PROYECCIONES$quinquenio)
#colnames(PROYECCIONES)
```

# 2. Proyecciones por comunas

```{r}
## Proyección poblacional por comuna

data1 <- PROYECCIONES %>%

## agrupamiento por comunas
  group_by(Comuna) %>%

## resumir en una suma los valores de las columnas que inician con población
  summarise(across(starts_with("Poblacion"), 
                   sum, 
                   na.rm = TRUE))

# write_csv(data1, "PROYECCION_COMUNA.csv")
```

# 3. Proyecciones por sexo

```{r}
## Proyeccion poblacional por sexo

data2 <- PROYECCIONES %>%

## agrupamiento por comunas
  group_by(`Sexo\r\n1=Hombre\r\n2=Mujer`) %>%

## resumir en una suma los valores de las columnas que inician con población
  summarise(across(starts_with("Poblacion"), 
                   sum, 
                   na.rm = TRUE))

# write_csv(data2, "PROYECCION_SEXO.csv")
```

# 4. Proyecciones por quinquenios (DEIS)

```{r}
data3 <- PROYECCIONES %>%

## agrupamiento por comunas
  group_by(quinquenio) %>%

## resumir en una suma los valores de las columnas que inician con población
  summarise(across(starts_with("Poblacion"), 
                   sum, 
                   na.rm = TRUE))

# write_csv(data3, "PROYECCION_QUINQUENIO.csv")
```

# 5. Proyecciones por comuna y sexo

```{r}
## Proyección poblacional por comuna y sexo

data4 <- PROYECCIONES %>%

## agrupamiento por comuna y sexo
  group_by(Comuna, `Sexo\r\n1=Hombre\r\n2=Mujer`) %>%

## resumir en una suma los valores de las columnas que inician con población
  summarise(across(starts_with("Poblacion"), 
                   sum,
                   na.rm = TRUE))

# write_csv(data4, "PROYECCION_COMUNA_SEXO.csv")
```

# 6. Proyecciones poblacionales por comuna y quinquenio

```{r}
## Proyección poblacional por comuna y quiquenio

data5 <- PROYECCIONES %>%

## agrupamiento por comuna y sexo
  group_by(Comuna, quinquenio) %>%

## resumir en una suma los valores de las columnas que inician con población
  summarise(across(starts_with("Poblacion"), 
                   sum,
                   na.rm = TRUE))


# write.csv(data5, "PROYECCION_COMUNA_QUINQUENIO.csv")

#ver como queda con formato long las proyecciones.
```

# 6. Proyecciones poblacionales por comuna, quinquenio y sexo

```{r}
## Proyección poblacional por comuna, quiquenio y sexo

data6 <- PROYECCIONES %>%

## agrupamiento por comuna y sexo
  group_by(Comuna, quinquenio, `Sexo\r\n1=Hombre\r\n2=Mujer`) %>%

## resumir en una suma los valores de las columnas que inician con población
  summarise(across(starts_with("Poblacion"), 
                   sum,
                   na.rm = TRUE))

# write_csv(data6, "PROYECCION_COMUNA_QUINQUENIO_SEXO.csv")
```

```{r}
## Código listo

## NOTA: las salidas de estas proyecciones no tienen incorporada la variable SS. Esta debe ser añadida en cada script de R para las respectivas tasas (incidencia y mortalidad). De este script saldran los archivos .csv que serán cargados en dichos scripts para la creación de las tasas necesarias.

## NOTA: aechivos .csv listos.

## debi dejar estos archivos listos con la variable SS.
```

```{r}
## añadir variable de SS.

ServSalud <- read_csv("~/Desktop/U_CHILE/MG_BIOESTADÍSTICA/TESIS/DATOS PÚBLICOS/REGISTRO POBALCIONAL DE CÁNCER/ServSalud.csv") %>%
  rename(CODIGO_COMUNA = `Código Comuna`,
         Servicio_salud = `Nombre Dependencia Jerárquica (SEREMI / Servicio de Salud)`) %>%
  mutate(CODIGO_COMUNA = as.numeric(CODIGO_COMUNA))

data6 <- data6 %>%
  mutate(Quinquenios_edad = as.factor(quinquenio),
         Sexo = as.factor(`Sexo\r\n1=Hombre\r\n2=Mujer`)) %>%
  
## se eliminan del DF las variables originales.
  dplyr::select(-quinquenio,- `Sexo\r\n1=Hombre\r\n2=Mujer`) %>%
  
  mutate(CODIGO_COMUNA = Comuna) %>%

  dplyr::select(-Comuna)

## juntar el df de pob.quinquenio con el de ServSalud para crear en el primer df la variable de servicio de salud.
data6 <- inner_join(data6, ServSalud, by = "CODIGO_COMUNA")



pob.quinquenio <- data6 %>%
  
  ## eliminar columnas que no se usarán
  dplyr::select(-CODIGO_COMUNA, -`Nombre Comuna`) %>%
  
  ## agrupar según servicio de salud, sexo y quinquenio
  group_by(Servicio_salud, Sexo, Quinquenios_edad) %>%
  
  ## Resumir información en la suma de las columnas
  summarise(across(starts_with("Poblacion"), sum)) %>%
  
  ## Dar formato long al df
  pivot_longer(
    
    #columnas a pasar a formato largo
    cols = starts_with("Poblacion"), # aquellas columnas que empiezan con población
    #nueva columna creada a partir de cols
    names_to = "AÑO",
    #nombre de la columa a crear a partir de los datos de las celdas
    values_to = "POBLACION" ) %>%
  
  ## En la variable año remover el string "Poblacion" y dejando solo el año en formato numeric
  mutate(AÑO = as.numeric(str_remove(AÑO, "Poblacion ")))

## exportar pob.quinquenio
# save(pob.quinquenio, file = "pob_total_quinquenios_ss.RData")
```
